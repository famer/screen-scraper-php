<?php

/**
 * BaseDetailedWeather
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property enum $daytime
 * @property integer $weather_id
 * @property time $time
 * @property string $graph
 * @property integer $cloud
 * @property decimal $temperature
 * @property string $description
 * @property string $geDescription
 * @property decimal $pressureMB
 * @property decimal $pressureTorr
 * @property decimal $precipitation
 * @property integer $humidity
 * @property integer $windDirectionDegrees
 * @property string $windDirectionLang
 * @property integer $windSpeed
 * @property DailyWeather $DailyWeather
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDetailedWeather extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('detailed_weather');
        $this->hasColumn('daytime', 'enum', null, array(
             'primary' => true,
             'type' => 'enum',
             'values' => 
             array(
              0 => 'night',
              1 => 'morning',
              2 => 'day',
              3 => 'evening',
             ),
             ));
        $this->hasColumn('weather_id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('time', 'time', 5, array(
             'type' => 'time',
             'length' => '5',
             ));
        $this->hasColumn('graph', 'string', 3, array(
             'type' => 'string',
             'length' => '3',
             ));
        $this->hasColumn('cloud', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('temperature', 'decimal', 3, array(
             'type' => 'decimal',
             'length' => '3',
             'scale' => '1',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ge_description as geDescription', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('pressure_mb as pressureMB', 'decimal', 5, array(
             'type' => 'decimal',
             'length' => '5',
             'scale' => '1',
             ));
        $this->hasColumn('pressure_torr as pressureTorr', 'decimal', 4, array(
             'type' => 'decimal',
             'length' => '4',
             'scale' => '1',
             ));
        $this->hasColumn('precipitation', 'decimal', 3, array(
             'type' => 'decimal',
             'length' => '3',
             'scale' => '1',
             ));
        $this->hasColumn('humidity', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));
        $this->hasColumn('wind_direction_degrees as windDirectionDegrees', 'integer', 2, array(
             'type' => 'integer',
             'length' => '2',
             ));
        $this->hasColumn('wind_direction_lang as windDirectionLang', 'string', 3, array(
             'type' => 'string',
             'length' => '3',
             ));
        $this->hasColumn('wind_speed as windSpeed', 'integer', 1, array(
             'type' => 'integer',
             'length' => '1',
             ));

        $this->setSubClasses(array(
             'NightWeather' => 
             array(
              'daytime' => 1,
             ),
             'MorningWeather' => 
             array(
              'daytime' => 2,
             ),
             'DayWeather' => 
             array(
              'daytime' => 3,
             ),
             'EveningWeather' => 
             array(
              'daytime' => 4,
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DailyWeather', array(
             'local' => 'weather_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}
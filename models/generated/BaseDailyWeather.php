<?php

/**
 * BaseDailyWeather
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $city_id
 * @property string $graph
 * @property decimal $maxTemperature
 * @property decimal $minTemperature
 * @property decimal $precipitation
 * @property string $description
 * @property string $geDescription
 * @property time $sunrise
 * @property time $sunset
 * @property time $dayDuration
 * @property date $date
 * @property City $City
 * @property Doctrine_Collection $DetailedWeather
 * @property NightWeather $NightWeather
 * @property MorningWeather $MorningWeather
 * @property DayWeather $DayWeather
 * @property EveningWeather $EveningWeather
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDailyWeather extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('daily_weather');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('graph', 'string', 3, array(
             'type' => 'string',
             'length' => '3',
             ));
        $this->hasColumn('max_temperature as maxTemperature', 'decimal', 3, array(
             'type' => 'decimal',
             'length' => '3',
             'scale' => '1',
             ));
        $this->hasColumn('min_temperature as minTemperature', 'decimal', 3, array(
             'type' => 'decimal',
             'length' => '3',
             'scale' => '1',
             ));
        $this->hasColumn('precipitation', 'decimal', 3, array(
             'type' => 'decimal',
             'length' => '3',
             'scale' => '1',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ge_description as geDescription', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('sunrise', 'time', 5, array(
             'type' => 'time',
             'length' => '5',
             ));
        $this->hasColumn('sunset', 'time', 5, array(
             'type' => 'time',
             'length' => '5',
             ));
        $this->hasColumn('day_duration as dayDuration', 'time', 5, array(
             'type' => 'time',
             'length' => '5',
             ));
        $this->hasColumn('date', 'date', 10, array(
             'type' => 'date',
             'notnull' => true,
             'length' => '10',
             ));


        $this->index('city_date_unique', array(
             'fields' => 
             array(
              0 => 'city_id',
              1 => 'date',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $this->hasMany('DetailedWeather', array(
             'local' => 'id',
             'foreign' => 'weather_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('NightWeather', array(
             'local' => 'id',
             'foreign' => 'weather_id'));

        $this->hasOne('MorningWeather', array(
             'local' => 'id',
             'foreign' => 'weather_id'));

        $this->hasOne('DayWeather', array(
             'local' => 'id',
             'foreign' => 'weather_id'));

        $this->hasOne('EveningWeather', array(
             'local' => 'id',
             'foreign' => 'weather_id'));
    }
}